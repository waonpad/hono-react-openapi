{
  "openapi": "3.1.0",
  "info": {
    "title": "API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:8787",
      "description": "Current environment"
    }
  ],
  "components": {
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "hOn012drizZle34aP1"
          },
          "name": {
            "type": "string",
            "minLength": 2,
            "maxLength": 100,
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "example@exmaple.com"
          },
          "role": {
            "type": "string",
            "enum": [
              "ADMIN",
              "USER"
            ],
            "example": "USER"
          },
          "createdAt": {
            "type": "string",
            "example": "2024-05-22 13:51:19"
          },
          "updatedAt": {
            "type": "string",
            "example": "2024-05-22 13:51:19"
          }
        },
        "required": [
          "id",
          "name",
          "email",
          "role",
          "createdAt",
          "updatedAt"
        ]
      },
      "SignUpResponse": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "token": {
            "type": "string",
            "example": "1234567890"
          }
        },
        "required": [
          "user",
          "token"
        ]
      },
      "BadRequestErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "BAD_REQUEST"
                ]
              },
              "status": {
                "type": "number",
                "enum": [
                  400
                ]
              },
              "severity": {
                "type": "string"
              },
              "resourceType": {
                "type": "string",
                "enum": [
                  "USER",
                  "POST"
                ]
              },
              "logId": {
                "type": "string"
              },
              "path": {
                "type": "string"
              },
              "method": {
                "type": "string"
              },
              "timestamp": {
                "type": "string"
              },
              "usr": {
                "type": "string"
              },
              "org": {
                "type": "string"
              }
            },
            "required": [
              "message",
              "type",
              "status",
              "severity"
            ]
          }
        },
        "required": [
          "error"
        ]
      },
      "SignUpValidationErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "VALIDATION_ERROR"
                ]
              },
              "status": {
                "type": "number",
                "enum": [
                  400
                ]
              },
              "validationTarget": {
                "type": "string",
                "enum": [
                  "json"
                ]
              },
              "formErrors": {
                "type": "string"
              },
              "fieldErrors": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            },
            "required": [
              "message",
              "type",
              "status",
              "validationTarget",
              "formErrors",
              "fieldErrors"
            ]
          }
        },
        "required": [
          "error"
        ]
      },
      "UnauthorizedErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "UNAUTHORIZED"
                ]
              },
              "status": {
                "type": "number",
                "enum": [
                  401
                ]
              },
              "severity": {
                "type": "string"
              },
              "resourceType": {
                "type": "string",
                "enum": [
                  "USER",
                  "POST"
                ]
              },
              "logId": {
                "type": "string"
              },
              "path": {
                "type": "string"
              },
              "method": {
                "type": "string"
              },
              "timestamp": {
                "type": "string"
              },
              "usr": {
                "type": "string"
              },
              "org": {
                "type": "string"
              }
            },
            "required": [
              "message",
              "type",
              "status",
              "severity"
            ]
          }
        },
        "required": [
          "error"
        ]
      },
      "ForbiddenErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "FORBIDDEN"
                ]
              },
              "status": {
                "type": "number",
                "enum": [
                  403
                ]
              },
              "severity": {
                "type": "string"
              },
              "resourceType": {
                "type": "string",
                "enum": [
                  "USER",
                  "POST"
                ]
              },
              "logId": {
                "type": "string"
              },
              "path": {
                "type": "string"
              },
              "method": {
                "type": "string"
              },
              "timestamp": {
                "type": "string"
              },
              "usr": {
                "type": "string"
              },
              "org": {
                "type": "string"
              }
            },
            "required": [
              "message",
              "type",
              "status",
              "severity"
            ]
          }
        },
        "required": [
          "error"
        ]
      },
      "NotFoundErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "NOT_FOUND"
                ]
              },
              "status": {
                "type": "number",
                "enum": [
                  404
                ]
              },
              "severity": {
                "type": "string"
              },
              "resourceType": {
                "type": "string",
                "enum": [
                  "USER",
                  "POST"
                ]
              },
              "logId": {
                "type": "string"
              },
              "path": {
                "type": "string"
              },
              "method": {
                "type": "string"
              },
              "timestamp": {
                "type": "string"
              },
              "usr": {
                "type": "string"
              },
              "org": {
                "type": "string"
              }
            },
            "required": [
              "message",
              "type",
              "status",
              "severity"
            ]
          }
        },
        "required": [
          "error"
        ]
      },
      "ServerErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "SERVER_ERROR"
                ]
              },
              "status": {
                "type": "number",
                "enum": [
                  500
                ]
              },
              "severity": {
                "type": "string"
              },
              "resourceType": {
                "type": "string",
                "enum": [
                  "USER",
                  "POST"
                ]
              },
              "logId": {
                "type": "string"
              },
              "path": {
                "type": "string"
              },
              "method": {
                "type": "string"
              },
              "timestamp": {
                "type": "string"
              },
              "usr": {
                "type": "string"
              },
              "org": {
                "type": "string"
              }
            },
            "required": [
              "message",
              "type",
              "status",
              "severity"
            ]
          }
        },
        "required": [
          "error"
        ]
      },
      "UserPassword": {
        "type": "string",
        "minLength": 8,
        "maxLength": 100,
        "example": "password123"
      },
      "SignUpRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 2,
            "maxLength": 100,
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "example@exmaple.com"
          },
          "password": {
            "$ref": "#/components/schemas/UserPassword"
          },
          "__target": {
            "type": "string",
            "enum": [
              "json"
            ]
          }
        },
        "required": [
          "name",
          "email",
          "password"
        ]
      },
      "SignInResponse": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "token": {
            "type": "string",
            "example": "1234567890"
          }
        },
        "required": [
          "user",
          "token"
        ]
      },
      "SignInValidationErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "VALIDATION_ERROR"
                ]
              },
              "status": {
                "type": "number",
                "enum": [
                  400
                ]
              },
              "validationTarget": {
                "type": "string",
                "enum": [
                  "json"
                ]
              },
              "formErrors": {
                "type": "string"
              },
              "fieldErrors": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            },
            "required": [
              "message",
              "type",
              "status",
              "validationTarget",
              "formErrors",
              "fieldErrors"
            ]
          }
        },
        "required": [
          "error"
        ]
      },
      "SignInRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "example@exmaple.com"
          },
          "password": {
            "$ref": "#/components/schemas/UserPassword"
          },
          "__target": {
            "type": "string",
            "enum": [
              "json"
            ]
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "UserParamValidationErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "VALIDATION_ERROR"
                ]
              },
              "status": {
                "type": "number",
                "enum": [
                  400
                ]
              },
              "validationTarget": {
                "type": "string",
                "enum": [
                  "param"
                ]
              },
              "formErrors": {
                "type": "string"
              },
              "fieldErrors": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  }
                }
              }
            },
            "required": [
              "message",
              "type",
              "status",
              "validationTarget",
              "formErrors",
              "fieldErrors"
            ]
          }
        },
        "required": [
          "error"
        ]
      },
      "UpdateUserValidationErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "VALIDATION_ERROR"
                ]
              },
              "status": {
                "type": "number",
                "enum": [
                  400
                ]
              },
              "validationTarget": {
                "type": "string",
                "enum": [
                  "json"
                ]
              },
              "formErrors": {
                "type": "string"
              },
              "fieldErrors": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "role": {
                    "type": "string"
                  }
                }
              }
            },
            "required": [
              "message",
              "type",
              "status",
              "validationTarget",
              "formErrors",
              "fieldErrors"
            ]
          }
        },
        "required": [
          "error"
        ]
      },
      "UpdateUserRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 2,
            "maxLength": 100,
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "example@exmaple.com"
          },
          "role": {
            "type": "string",
            "enum": [
              "ADMIN",
              "USER"
            ],
            "example": "USER"
          },
          "__target": {
            "type": "string",
            "enum": [
              "json"
            ]
          }
        },
        "required": [
          "name",
          "email",
          "role"
        ]
      },
      "GetUsersQueryValidationErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "VALIDATION_ERROR"
                ]
              },
              "status": {
                "type": "number",
                "enum": [
                  400
                ]
              },
              "validationTarget": {
                "type": "string",
                "enum": [
                  "query"
                ]
              },
              "formErrors": {
                "type": "string"
              },
              "fieldErrors": {
                "type": "object",
                "properties": {
                  "sort": {
                    "type": "string"
                  },
                  "q": {
                    "type": "string"
                  },
                  "order": {
                    "type": "string"
                  },
                  "offset": {
                    "type": "string"
                  },
                  "limit": {
                    "type": "string"
                  },
                  "role": {
                    "type": "string"
                  }
                }
              }
            },
            "required": [
              "message",
              "type",
              "status",
              "validationTarget",
              "formErrors",
              "fieldErrors"
            ]
          }
        },
        "required": [
          "error"
        ]
      },
      "Post": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "hOn012drizZle34aP1"
          },
          "title": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "example": "HonoDrizzle"
          },
          "body": {
            "type": "string",
            "minLength": 1,
            "example": "Post body"
          },
          "public": {
            "type": "boolean",
            "example": true
          },
          "authorId": {
            "type": "string",
            "example": "hOn012drizZle34aP1"
          },
          "createdAt": {
            "type": "string",
            "example": "2024-05-22 13:51:19"
          },
          "updatedAt": {
            "type": "string",
            "example": "2024-05-22 13:51:19"
          }
        },
        "required": [
          "id",
          "title",
          "body",
          "public",
          "authorId",
          "createdAt",
          "updatedAt"
        ]
      },
      "CreatePostValidationErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "VALIDATION_ERROR"
                ]
              },
              "status": {
                "type": "number",
                "enum": [
                  400
                ]
              },
              "validationTarget": {
                "type": "string",
                "enum": [
                  "json"
                ]
              },
              "formErrors": {
                "type": "string"
              },
              "fieldErrors": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "body": {
                    "type": "string"
                  },
                  "public": {
                    "type": "string"
                  }
                }
              }
            },
            "required": [
              "message",
              "type",
              "status",
              "validationTarget",
              "formErrors",
              "fieldErrors"
            ]
          }
        },
        "required": [
          "error"
        ]
      },
      "CreatePostRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "example": "HonoDrizzle"
          },
          "body": {
            "type": "string",
            "minLength": 1,
            "example": "Post body"
          },
          "public": {
            "type": "boolean",
            "example": true
          },
          "__target": {
            "type": "string",
            "enum": [
              "json"
            ]
          }
        },
        "required": [
          "title",
          "body",
          "public"
        ]
      },
      "PostParamValidationErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "VALIDATION_ERROR"
                ]
              },
              "status": {
                "type": "number",
                "enum": [
                  400
                ]
              },
              "validationTarget": {
                "type": "string",
                "enum": [
                  "param"
                ]
              },
              "formErrors": {
                "type": "string"
              },
              "fieldErrors": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  }
                }
              }
            },
            "required": [
              "message",
              "type",
              "status",
              "validationTarget",
              "formErrors",
              "fieldErrors"
            ]
          }
        },
        "required": [
          "error"
        ]
      },
      "UpdatePostValidationErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "VALIDATION_ERROR"
                ]
              },
              "status": {
                "type": "number",
                "enum": [
                  400
                ]
              },
              "validationTarget": {
                "type": "string",
                "enum": [
                  "json"
                ]
              },
              "formErrors": {
                "type": "string"
              },
              "fieldErrors": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "body": {
                    "type": "string"
                  },
                  "public": {
                    "type": "string"
                  }
                }
              }
            },
            "required": [
              "message",
              "type",
              "status",
              "validationTarget",
              "formErrors",
              "fieldErrors"
            ]
          }
        },
        "required": [
          "error"
        ]
      },
      "UpdatePostRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "example": "HonoDrizzle"
          },
          "body": {
            "type": "string",
            "minLength": 1,
            "example": "Post body"
          },
          "public": {
            "type": "boolean",
            "example": true
          },
          "__target": {
            "type": "string",
            "enum": [
              "json"
            ]
          }
        },
        "required": [
          "title",
          "body",
          "public"
        ]
      },
      "GetPostsQueryValidationErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "VALIDATION_ERROR"
                ]
              },
              "status": {
                "type": "number",
                "enum": [
                  400
                ]
              },
              "validationTarget": {
                "type": "string",
                "enum": [
                  "query"
                ]
              },
              "formErrors": {
                "type": "string"
              },
              "fieldErrors": {
                "type": "object",
                "properties": {
                  "sort": {
                    "type": "string"
                  },
                  "q": {
                    "type": "string"
                  },
                  "order": {
                    "type": "string"
                  },
                  "offset": {
                    "type": "string"
                  },
                  "limit": {
                    "type": "string"
                  }
                }
              }
            },
            "required": [
              "message",
              "type",
              "status",
              "validationTarget",
              "formErrors",
              "fieldErrors"
            ]
          }
        },
        "required": [
          "error"
        ]
      }
    },
    "parameters": {}
  },
  "paths": {
    "/sign-up": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Sign up a new user",
        "middleware": [
          null
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignUpRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User signed up successfully (cookie set automatically)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignUpResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/BadRequestErrorResponse"
                    },
                    {
                      "$ref": "#/components/schemas/SignUpValidationErrorResponse"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error: something went wrong.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/sign-in": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Sign in a user",
        "middleware": [
          null
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignInRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User signed in successfully (cookie set automatically)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignInResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/BadRequestErrorResponse"
                    },
                    {
                      "$ref": "#/components/schemas/SignInValidationErrorResponse"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error: something went wrong.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/me": {
      "get": {
        "middleware": [
          null
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "users"
        ],
        "responses": {
          "200": {
            "description": "User",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error: something went wrong.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "put": {
        "middleware": [
          null
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "users"
        ],
        "summary": "Update a user",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "example": "hOn012drizZle34aP1"
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/BadRequestErrorResponse"
                    },
                    {
                      "$ref": "#/components/schemas/UserParamValidationErrorResponse"
                    },
                    {
                      "$ref": "#/components/schemas/UpdateUserValidationErrorResponse"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error: something went wrong.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "middleware": [
          null
        ],
        "tags": [
          "users"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "example": "hOn012drizZle34aP1"
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "User",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/BadRequestErrorResponse"
                    },
                    {
                      "$ref": "#/components/schemas/UserParamValidationErrorResponse"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error: something went wrong.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "middleware": [
          null
        ],
        "tags": [
          "users"
        ],
        "summary": "Get list of users",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "検索クエリ"
            },
            "required": false,
            "name": "q",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "name",
                "email",
                "role",
                "createdAt",
                "updatedAt"
              ],
              "default": "createdAt",
              "example": "createdAt"
            },
            "required": false,
            "name": "sort",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "asc",
              "description": "ソート順"
            },
            "required": false,
            "name": "order",
            "in": "query"
          },
          {
            "schema": {
              "type": [
                "number",
                "null"
              ],
              "default": 0,
              "description": "取得するアイテムのオフセット"
            },
            "required": false,
            "name": "offset",
            "in": "query"
          },
          {
            "schema": {
              "type": [
                "number",
                "null"
              ],
              "default": 50,
              "description": "取得するアイテムの数"
            },
            "required": false,
            "name": "limit",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "ADMIN",
                "USER"
              ],
              "default": "USER",
              "example": "ADMIN"
            },
            "required": false,
            "name": "role",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "query"
              ]
            },
            "required": false,
            "name": "__target",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/User"
                          },
                          "description": "アイテムの配列"
                        },
                        "total": {
                          "type": "number",
                          "description": "アイテムの総数",
                          "example": 1
                        }
                      },
                      "required": [
                        "items",
                        "total"
                      ]
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/BadRequestErrorResponse"
                    },
                    {
                      "$ref": "#/components/schemas/GetUsersQueryValidationErrorResponse"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error: something went wrong.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/posts": {
      "post": {
        "middleware": [
          null
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "posts"
        ],
        "summary": "Create a post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePostRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Post",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Post"
                }
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/BadRequestErrorResponse"
                    },
                    {
                      "$ref": "#/components/schemas/CreatePostValidationErrorResponse"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error: something went wrong.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "middleware": [
          null
        ],
        "tags": [
          "posts"
        ],
        "summary": "Get list of posts",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "検索クエリ"
            },
            "required": false,
            "name": "q",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "createdAt",
                "updatedAt"
              ],
              "default": "createdAt",
              "example": "createdAt"
            },
            "required": false,
            "name": "sort",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "asc",
              "description": "ソート順"
            },
            "required": false,
            "name": "order",
            "in": "query"
          },
          {
            "schema": {
              "type": [
                "number",
                "null"
              ],
              "default": 0,
              "description": "取得するアイテムのオフセット"
            },
            "required": false,
            "name": "offset",
            "in": "query"
          },
          {
            "schema": {
              "type": [
                "number",
                "null"
              ],
              "default": 50,
              "description": "取得するアイテムの数"
            },
            "required": false,
            "name": "limit",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "query"
              ]
            },
            "required": false,
            "name": "__target",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Posts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Post"
                          },
                          "description": "アイテムの配列"
                        },
                        "total": {
                          "type": "number",
                          "description": "アイテムの総数",
                          "example": 1
                        }
                      },
                      "required": [
                        "items",
                        "total"
                      ]
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/BadRequestErrorResponse"
                    },
                    {
                      "$ref": "#/components/schemas/GetPostsQueryValidationErrorResponse"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error: something went wrong.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/posts/{id}": {
      "put": {
        "middleware": [
          null
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "posts"
        ],
        "summary": "Update a post",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "example": "hOn012drizZle34aP1"
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePostRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Post",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Post"
                }
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/BadRequestErrorResponse"
                    },
                    {
                      "$ref": "#/components/schemas/PostParamValidationErrorResponse"
                    },
                    {
                      "$ref": "#/components/schemas/UpdatePostValidationErrorResponse"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error: something went wrong.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "middleware": [
          null
        ],
        "tags": [
          "posts"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "example": "hOn012drizZle34aP1"
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Post",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Post"
                }
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/BadRequestErrorResponse"
                    },
                    {
                      "$ref": "#/components/schemas/PostParamValidationErrorResponse"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error: something went wrong.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "middleware": [
          null
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "posts"
        ],
        "summary": "Delete a post",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "example": "hOn012drizZle34aP1"
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/BadRequestErrorResponse"
                    },
                    {
                      "$ref": "#/components/schemas/PostParamValidationErrorResponse"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error: something went wrong.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "webhooks": {}
}